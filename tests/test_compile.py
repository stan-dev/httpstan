"""Test compiling functions."""

import aiohttp
import pytest

import httpstan.compile


def test_compile() -> None:
    program_code = "parameters {real y;} model {y ~ normal(0,1);}"
    cpp_code = httpstan.compile.compile(program_code, "test_model")
    assert "Code generated by stanc" in cpp_code


def test_compile_syntax_error() -> None:
    # program code is missing a `{`
    program_code = "parameters {real y;} model y ~ normal(0,1);}"
    with pytest.raises(ValueError, match=r"Syntax error in"):
        httpstan.compile.compile(program_code, "test_model")


def test_compile_semantic_error() -> None:
    program_code = "parameters {real z;} model {z ~ no_such_distribution();}"
    with pytest.raises(ValueError, match=r"Semantic error in"):
        httpstan.compile.compile(program_code, "test_model")


@pytest.mark.asyncio
async def test_compile_invalid_distribution(api_url: str) -> None:
    """Check that compiler error is returned to client."""

    program_code = "parameters {real z;} model {z ~ no_such_distribution();}"
    payload = {"program_code": program_code}
    models_url = f"{api_url}/models"
    async with aiohttp.ClientSession() as session:
        async with session.post(models_url, json=payload) as resp:
            assert resp.status == 400
            response_payload = await resp.json()
    assert "message" in response_payload
    assert "Semantic error in" in response_payload["message"]


@pytest.mark.asyncio
async def test_compile_unknown_arg(api_url: str) -> None:
    """Check that compiler error is returned to client.

    This error can be detected by schema validation.

    """

    program_code = "parameters {real z;} model {z ~ no_such_distribution();}"
    payload = {"unknown_arg": "abcdef", "program_code": program_code}
    models_url = f"{api_url}/models"
    async with aiohttp.ClientSession() as session:
        async with session.post(models_url, json=payload) as resp:
            assert resp.status == 422
            response_payload = await resp.json()
    assert "unknown_arg" in response_payload
