version: '{build}'
image: Visual Studio 2015
platform:
  - x64
environment:
  global:
    WHEELHOUSE_UPLOADER_REGION: IAD
    WHEELHOUSE_UPLOADER_USERNAME: pystan-worker
    WHEELHOUSE_UPLOADER_SECRET:
      secure: cqdCOlelH3UdBVv+FyD4nNfT5X5bB2OwqehwkxqMABKcHy1H4+t8v3jVVvTxV7uq

  matrix:
    - CONDA: 37

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""
  - SET "CONDAPATH=conda%CONDA%"
  - if %CONDA%==37 (SET "CONDAPATH=conda36")
  - if %PLATFORM%==x64 (SET "CONDAPATH=%CONDAPATH%-x64")

  - CALL "C:\\Mini%CONDAPATH%\\Scripts\\conda.exe" info --envs

  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda

  - if %CONDA%==37 (CALL conda create -n py37 python=3.7 -y -q)
  - if %CONDA%==37 (CALL conda activate py37)

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  # setup conda - use default channel
  - conda update --all -q
  - conda info
  - conda install numpy cython scipy matplotlib pandas setuptools libpython m2w64-toolchain -c msys2 -q
  # test numpy
  - python -c "import numpy as np; print('numpy imported succesfull')"
  # test gcc version
  - gcc --version
  # Upgrade to the latest version of pip to avoid it displaying warnings
  # about it being out of date.
  - python -m pip install --disable-pip-version-check --upgrade pip

  # Install the build dependencies of the project.
  - pip install -q wheel
  - pip install -q -r requirements.txt
  - pip install -q -r test-requirements.txt

  - ECHO "Starting to build the wheel"
  # build the wheel and install it
  - python setup.py --quiet bdist_wheel bdist_wininst
  - ps: "ls dist"

  - ECHO "Install generated wheel to test it"
  # Install the generated wheel package to test it
  - pip install -q --pre --no-index --find-links dist/ pystan

# Not a .NET project, we build pystan in the install step instead
build: false

test_script:
  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - ECHO "Starting the tests"
  - "python -m pytest tests"
  - ECHO "End of testing"

after_test:
  # wheel is already built in "install" step
  # If tests are successful, create binary packages for the project.
  # TODO: may need to set PBR_VERSION, submodules often confuse pbr
  #- python setup.py --quiet bdist_wheel
  - ps: "ls dist"
  # APPVEYOR_REPO_TAG will be true if commit is tagged
  - "IF /I %APPVEYOR_REPO_TAG%==true (pip install wheelhouse-uploader -q)"
  - "IF /I %APPVEYOR_REPO_TAG%==true (python -m wheelhouse_uploader upload --local-folder=dist --no-ssl-check --no-update-index --region=%WHEELHOUSE_UPLOADER_REGION% wheels)"
