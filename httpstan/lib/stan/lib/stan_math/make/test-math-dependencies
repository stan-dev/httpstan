## 
#  Function to search code for warnings.
#
#  After all the warnings are found, use
#  print_math_warnings to print the warnings.
#
#  The output of the warnings look like cpplint warnings.
#  It displays the filename, the line number, the message,
#  and the type of error message.
#
#  Example:
#  stan/math/fwd/core/fvar.hpp(105): File uses boost::enable_if_c instead of std::enable_if. [C++14]
#
#  Arguments (in order):
#    type: The type of error message. Example: 'C++14'
#    folder: The folders to search for this type of error. Example: 'stan/math/*/scal'
#    pattern: The pattern to find. This pattern is searched for in non-comment lines.
#      Example: 'boost::enable_if<'
#    message: The descriptive error message to pass to the user. For some reason, this
#      message has to escape '<' and '>', so use '\<' and '\>. If you see a message like
#      "/bin/sh: boost/utility/enable_if.hpp: No such file or directory", the message
#      needs to be escaped.
#      Example: 'Replace \<boost/utility/enable_if.hpp\> with \<type_traits\>.'
##
define math_warnings
$(eval type:= $1)
$(eval all_headers := $(shell find $2 -name '*.hpp' -o -name '*.cpp'))
$(eval pattern := $3)
$(eval msg := $4)
$(eval _new_math_warnings_str:=$(foreach file,\
  $(shell grep -r -n -e $(pattern) $(all_headers) | grep -v ": \* " | sed 's|\([^:]*\):\([0-9]*\):.*|\1(\2)|g'),\
  echo '$(file): $(msg) [$(type)]';))
$(eval _math_warnings_str+=$(_new_math_warnings_str))
endef

define print_math_warnings
@$(_math_warnings_str)
@exit $(if $(strip $(_math_warnings_str)),1,0)
endef

.PHONY: test-math-dependencies
test-math-dependencies:
## Check for files inside stan/math/prim that contain
##   stan/math/rev or stan/math/fwd
	@$(call math_warnings, 'prim', 'stan/math/prim',\
             '<stan/math/rev/', 'File includes a stan/math/rev header file.')
	@$(call math_warnings, 'prim', 'stan/math/prim',\
             'stan::math::rev', 'File uses stan::math::var.')
	@$(call math_warnings, 'prim', 'stan/math/prim',\
             '<stan/math/fwd/', 'File includes a stan/math/fwd header file.')
	@$(call math_warnings, 'prim', 'stan/math/prim',\
             'stan::math::fvar', 'File uses stan::math::fvar.')
	@$(call math_warnings, 'prim', 'stan/math/prim',\
             '<stan/math/mix/', 'File includes a stan/math/mix header file.')
## Check for files inside stan/math/rev that contain
##   stan/math/fwd or stan/math/mix
	@$(call math_warnings, 'rev', 'stan/math/rev',\
             '<stan/math/fwd/', 'File includes a stan/math/fwd header file.')
	@$(call math_warnings, 'rev', 'stan/math/rev',\
             'stan::math::fvar', 'File uses stan::math::fvar.')
	@$(call math_warnings, 'rev', 'stan/math/rev',\
             '<stan/math/mix/', 'File includes a stan/math/mix header file.')
## Check for files inside stan/math/rev that contain
##   stan/math/fwd or stan/math/mix
	@$(call math_warnings, 'fwd', 'stan/math/fwd',\
             '<stan/math/rev/', 'File includes a stan/math/rev header file.')
	@$(call math_warnings, 'fwd', 'stan/math/fwd',\
             'stan::math::var', 'File uses stan::math::var.')
	@$(call math_warnings, 'fwd', 'stan/math/fwd',\
             '<stan/math/mix/', 'File includes a stan/math/mix header file.')
## Check for files inside stan/math/*/scal that contain
##   stan/math/*/arr or stan/math/*/mat
	@$(call math_warnings, 'scal', stan/math/*/scal,\
             '<stan/math/.*/arr/', 'File includes an array header file.')
	@$(call math_warnings, 'scal', stan/math/*/scal,\
             '<vector>', 'File includes an std::vector header.')
	@$(call math_warnings, 'scal', stan/math/*/scal,\
             'std::vector', 'File uses std::vector.')
	@$(call math_warnings, 'scal', stan/math/*/scal,\
             '<stan/math/.*/mat/', 'File includes a matrix header file.')
	@$(call math_warnings, 'scal', stan/math/*/scal,\
             '<Eigen', 'File includes an Eigen header.')
	@$(call math_warnings, 'scal', stan/math/*/scal,\
             'Eigen::', 'File uses Eigen.')
## Check for files inside stan/math/*/arr that contain
##   stan/math/*/mat
	@$(call math_warnings, 'arr', stan/math/*/arr,\
             '<stan/math/.*/mat/', 'File includes an matrix header file.')
	@$(call math_warnings, 'arr', stan/math/*/arr,\
             '<Eigen', 'File includes an Eigen header.')
	@$(call math_warnings, 'arr', stan/math/*/arr,\
             'Eigen::', 'File uses Eigen.')
## Check to make sure we use C++14 constructs
##    stan/math
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::is_unsigned<', 'File uses boost::is_unsigned instead of std::is_unsigned.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             '<boost/type_traits/is_unsigned>',\
             'File includes <boost/type_traits/is_unsigned.hpp> instead of <type_traits>.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::is_arithmetic<', 'File uses boost::is_arithmetic instead of std::is_arithmetic.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             '<boost/type_traits/is_arithmetic.hpp>',\
             'File includes <boost/type_traits/is_unsigned.hpp> instead of <type_traits>.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::is_convertible<', 'File uses boost::is_convertible instead of std::is_convertible.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             '<boost/type_traits/is_convertible.hpp>',\
             'File includes <boost/type_traits/is_convertible.hpp> instead of <type_traits>.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::is_same<', 'File uses boost::is_same instead of std::is_same.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             '<boost/type_traits/is_same.hpp>',\
             'File includes <boost/type_traits/is_same.hpp> instead of <type_traits>.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::enable_if_c<', 'File uses boost::enable_if_c instead of std::enable_if.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::enable_if<', 'File uses boost::enable_if instead of std::enable_if.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             'boost::disable_if<', 'File uses boost::disable_if instead of std::enable_if.')
	@$(call math_warnings, 'C++14', 'stan/math',\
             '<boost/utility/enable_if.hpp>',\
             'Replace \<boost/utility/enable_if.hpp\> with \<type_traits\>.')
## Print all warnings
	@$(call print_math_warnings)
